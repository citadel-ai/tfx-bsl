diff --git cpp/src/arrow/c/helpers.h cpp/src/arrow/c/helpers.h
index a24f272fe..5bf6a593d 100644
--- cpp/src/arrow/c/helpers.h
+++ cpp/src/arrow/c/helpers.h
@@ -17,6 +17,7 @@
 
 #pragma once
 
+#include <assert.h>
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
diff --git cpp/src/arrow/util/config.h.cmake cpp/src/arrow/util/config.h.cmake
index 9fbd68508..cda6be809 100644
--- cpp/src/arrow/util/config.h.cmake
+++ cpp/src/arrow/util/config.h.cmake
@@ -44,30 +44,18 @@
 #cmakedefine ARROW_FLIGHT
 #cmakedefine ARROW_FLIGHT_SQL
 #cmakedefine ARROW_IPC
-#cmakedefine ARROW_JEMALLOC
-#cmakedefine ARROW_JEMALLOC_VENDORED
-#cmakedefine ARROW_JSON
 #cmakedefine ARROW_MIMALLOC
-#cmakedefine ARROW_ORC
 #cmakedefine ARROW_PARQUET
-#cmakedefine ARROW_SUBSTRAIT
 
 #cmakedefine ARROW_AZURE
 #cmakedefine ARROW_ENABLE_THREADING
 #cmakedefine ARROW_GCS
 #cmakedefine ARROW_HDFS
 #cmakedefine ARROW_S3
-#cmakedefine ARROW_USE_GLOG
+
+#ifdef __SIZEOF_INT128__
 #cmakedefine ARROW_USE_NATIVE_INT128
-#cmakedefine ARROW_WITH_BROTLI
-#cmakedefine ARROW_WITH_BZ2
-#cmakedefine ARROW_WITH_LZ4
+#endif
+
 #cmakedefine ARROW_WITH_MUSL
-#cmakedefine ARROW_WITH_OPENTELEMETRY
-#cmakedefine ARROW_WITH_RE2
-#cmakedefine ARROW_WITH_SNAPPY
-#cmakedefine ARROW_WITH_UCX
-#cmakedefine ARROW_WITH_UTF8PROC
-#cmakedefine ARROW_WITH_ZLIB
-#cmakedefine ARROW_WITH_ZSTD
 #cmakedefine PARQUET_REQUIRE_ENCRYPTION
diff --git cpp/src/arrow/util/int128_internal.h cpp/src/arrow/util/int128_internal.h
index 1d494671a..d1019224a 100644
--- cpp/src/arrow/util/int128_internal.h
+++ cpp/src/arrow/util/int128_internal.h
@@ -20,7 +20,7 @@
 #include "arrow/util/macros.h"
 
 #ifndef ARROW_USE_NATIVE_INT128
-#include <boost/multiprecision/cpp_int.hpp>
+#include "absl/numeric/int128.h"
 #endif
 
 namespace arrow {
@@ -37,8 +37,8 @@ namespace internal {
 using int128_t = __int128_t;
 using uint128_t = __uint128_t;
 #else
-using boost::multiprecision::int128_t;
-using boost::multiprecision::uint128_t;
+using int128_t = absl::int128;
+using uint128_t = absl::uint128;
 #endif
 
 }  // namespace internal
